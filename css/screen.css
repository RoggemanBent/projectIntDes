/*------------------------------------*\
#FONTS
\*------------------------------------*/

@font-face {
    font-family: "Inter";
    font-weight: 400;
    src: url("../fonts/Inter-UI-Regular.woff2") format("woff2")
}

@font-face {
    font-family: "Inter";
    font-weight: 500;
    src: url("../fonts/Inter-UI-Medium.woff2") format("woff2")
}

@font-face {
    font-family: "Inter";
    font-weight: 700;
    src: url("../fonts/Inter-UI-Bold.woff2") format("woff2")
}

/*------------------------------------*\
#Variables
\*------------------------------------*/

:root {
    /* typography */
    --global-root-font-size: 15;
    /* colors */
    --global-color-alpha-light: #ef5350;
    --global-color-alpha: #e6312e;
    --global-color-beta: #ffe6e6;
    --global-color-neutral-xxx-light: #fff2f2;
    --global-color-neutral-xx-light: #ffe6e6;
    --global-color-neutral-x-light: #ffb4b3;
    --global-color-neutral-light: #ef5350;
    --global-color-neutral: #e6312e;
    --global-color-neutral-dark: #b31512;
    --global-color-neutral-x-dark: #800200;
    --global-color-neutral-xx-dark: #4d0100;
    --global-color-neutral-xxx-dark: #1a0000;
    /* Shadows */
    --global-box-shadow: 0 0 0 1px rgba(0, 0, 0, .025), 0 2px 6px rgba(0, 0, 0, .05);
    --global-box-shadow-lg: 0 0 0 1px rgba(0, 0, 0, .025), 0 2px 10px rgba(0, 0, 0, .1);
    --global-input-shadow: 0 2px 3px rgba(0, 0, 0, .05);
    --global-input-focus-shadow: 0 0 5px var(--global-color-alpha-light);
    /* global page settings */
    --global-page-color: var(--global-color-neutral-xxx-dark);
    --global-page-backgroundColor: var(--global-color-neutral-xxx-light);
    --global-selection-backgroundColor: var(--global-color-alpha);
    /* border radius */
    --global-borderRadius: 30px;
    --global-borderWidth: 1px;
    /* transitions */
    --global-transitionEasing-out: ease-out;
    --global-transitionEasing-out-cubic: cubic-bezier(0.22, 0.61, 0.36, 1);
    --global-transitionDuration-alpha: .1s;
    --global-transitionDuration-beta: .2s;
    --global-transitionDuration-gamma: .3s;
    /* Baseline settings */
    --global-baseline: 8px;
    --global-whitespace: calc(var(--global-baseline) * 3);
    /* = 24px */
    --global-whitespace-xs: calc(var(--global-baseline) * .5);
    /* = 4px */
    --global-whitespace-sm: calc(var(--global-baseline) * 1);
    /*  = 8px */
    --global-whitespace-md: calc(var(--global-baseline) * 2);
    /*  = 16px */
    --global-whitespace-lg: calc(var(--global-baseline) * 4);
    /*  = 32px */
    --global-whitespace-xl: calc(var(--global-whitespace) * 2);
    /*  = 48px */
    --global-whitespace-xxl: calc(var(--global-whitespace) * 3);
    /*  = 72px */
    /* forms */
    --global-label-color: var(--global-color-neutral-xx-dark);
    --global-placeholder-color: var(--global-color-neutral-x-light);
    --global-input-backgroundColor: White;
    --global-input-color: var(--global-color-neutral-xxx-dark);
    --global-input-borderColor: var(--global-color-neutral-xxx-light);
    --global-input-hover-borderColor: var(--global-color-neutral-xx-light);
    --global-input-focus-borderColor: var(--global-color-alpha);
    --global-input-error-borderColor: var(--global-color-error);
    --global-input-focus-boxShadowSpread: 0 0 0 3px;
    --global-input-focus-boxShadowColor: var(--global-color-alpha-x-transparent);
    --global-input-error-boxShadowColor: var(--global-color-error-x-transparent);
}

/*------------------------------------*\
#GENERIC
\*------------------------------------*/

/*
    Generic: Page
    ---
    Global page styles + universal box-sizing:
*/

html {
    /* font-size: 15px; */
    font-size: 93.75%;
    /* = 15px in case of 16px default font-size */
    line-height: 1.6666667em;
    /* = 25px */
    font-family: "Source Sans Pro", Helvetica, arial, sans-serif;
    color: var(--global-color-neutral-xxx-dark);
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: var(--global-page-backgroundColor);
}

*, *:before, *:after {
    box-sizing: inherit;
}

/*
* Remove text-shadow in selection highlight:
* https://twitter.com/miketaylr/status/12228805301
*
* Customize the background color to match your design.
*/

::-moz-selection {
    background: var(--global-color-alpha);
    color: white;
    text-shadow: none;
}

::selection {
    background: var(--global-color-alpha);
    color: white;
    text-shadow: none;
}

/*------------------------------------*\
#Elements
\*------------------------------------*/

/*
Elements: Images
---
Default markup for images to make them responsive
*/

img {
    max-width: 100%;
    vertical-align: top;
}

/*
    Elements: typography
    ---
    Default markup for typographic elements
*/

h1, h2, h3 {
    font-weight: 700;
}

h1 {
    /* font-size: 36px; */
    font-size: 2.4rem;
    line-height: calc(var(--global-baseline) * 10);
    margin: 0 0 var(--global-whitespace-md);
}

h2 {
    /* font-size: 28px; */
    /* font-size: 1.8666666667rem; */
    font-size: calc(28rem / var(--global-root-font-size));
    font-weight: normal;
    line-height: calc(var(--global-baseline) * 8);
    margin: 0 0 var(--global-whitespace-lg);
}

h3 {
    /* font-size: 18px; */
    font-size: 1.2rem;
    line-height: calc(var(--global-baseline) * 6);
    margin: 0 0 var(--global-whitespace-md);
}

h4, h5, h6 {
    /* font-size: 15px; */
    font-size: 1rem;
    font-weight: 600;
    line-height: calc(var(--global-baseline) * 5);
    margin: 0 0 var(--global-whitespace-md);
}

p, ol, ul, dl, table, address, figure {
    margin: 0 0 var(--global-whitespace-md);
}

ul, ol {
    padding-left: 24px;
}

li ul, li ol {
    margin-bottom: 0;
}

blockquote {
    font-style: normal;
    font-size: 23px;
    line-height: calc(var(--global-baseline) * 5);
    margin: 0 0 var(--global-whitespace-md);
}

blockquote * {
    font-size: inherit;
    line-height: inherit;
}

figcaption {
    font-weight: 400;
    font-size: 12px;
    line-height: 16px;
    margin-top: 8px;
}

hr {
    border: 0;
    height: 1px;
    background: LightGrey;
    margin: 0 0 var(--global-whitespace-md);
}

a {
    transition: all var(--global-transition-alpha);
    color: var(--global-color-beta);
    outline-color: var(--global-color-beta);
    outline-width: medium;
    outline-offset: 2px;
}

a:visited, a:active {
    color: var(--global-color-beta);
}

a:hover, a:focus {
    color: var(--global-color-alpha);
}

label, input {
    display: inline-block;
    width: 50%;
    margin: 10px;
}

select {
    width: 100%;
}

input::placeholder {
    color: var(--global-color-neutral-light);
}

/*------------------------------------*\
#OBJECTS
\*------------------------------------*/

/*
    Objects: Column
    ---
    Creates a vertical column that stretches the viewport and adds padding around children
*/

.o-column {
    float: left;
    width: 50%;
    padding: 10px;
}

/*
    Objects: Row
    ---
    Creates a horizontal row that stretches the viewport and adds padding around children
*/

.o-row {
    position: relative;
    padding: var(--global-whitespace-lg) var(--global-whitespace-lg) var(--global-baseline);
}

.o-row:after {
    content: "";
    display: table;
    clear: both;
}

/*
    Objects: Container
    ---
    Creates a horizontal container that sets de global max-width
*/

.o-container {
    margin-left: auto;
    margin-right: auto;
    max-width: 78em;
    /* 78 * 15px = 1170 */
    width: 100%;
}

/*
    Objects: List
    ---
    Small reusable object to remove default list styling from lists
*/

.o-list {
    list-style: none;
    padding: 0;
}

/*
    Object: Button reset
    ---
    Small button reset object
*/

.o-button-reset {
    border: none;
    margin: 0;
    padding: 0;
    width: auto;
    overflow: visible;
    background: transparent;
    /* inherit font & color from ancestor */
    color: inherit;
    font: inherit;
    /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
    line-height: normal;
    /* Corrects font smoothing for webkit */
    -webkit-font-smoothing: inherit;
    -moz-osx-font-smoothing: inherit;
    /* Corrects inability to style clickable `input` types in iOS */
    -webkit-appearance: none;
}

/*
    Object: Hide accessible
    ---
    Accessibly hide any element
*/

.o-hide-accessible {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

/*------------------------------------*\
#COMPONENTS
\*------------------------------------*/

/*
    Component: Logo
    ---
    Website main logo
*/

.c-logo {
    height: var(--global-whitespace-xl);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 0;
}

.c-logo__launch {
    margin-bottom: var(--global-whitespace-xl);
}

.c-logo_image {
    height: var(--global-whitespace-xl);
}

/*
    Component: Progress
    ---
    Display the stats of the pokemon
*/

.c-progress {
    border-radius: 7px;
    width: 70%;
    display: inline;
}

.c-progress::-webkit-progress-bar {
    background-color: var(--global-color-neutral-xx-light);
    border-radius: 7px;
}

.c-progress::-webkit-progress-value {
    background-color: var(--global-color-alpha-light);
    border-radius: 7px;
}

.labelPercentage {
    width: var(--global-whitespace-sm);
}

/*
    Component: Type
    ---
    Display types of pokemon
*/

.c-type {
    width: 75px;
    border: 1px solid white;
    border-radius: 50px;
    text-align: center;
    color: white;
}

/*
    Component: Pokedex
    ---
    Pokemon list
*/

.c-pokedex {
    display: grid;
    grid-template-columns: repeat(3, 33%);
    grid-template-rows: repeat(3, 58% 20% 20%);
    grid-column-gap: 10px;
    grid-row-gap: 10px;
}

.grid_photo {
    grid-area: 1 / 1 / 2 / 2;
}

.grid_stats {
    grid-area: 1 / 2 / 2 / 4;
}

.grid_type {
    grid-area: 2 / 1 / 3 / 4;
}

.grid_profile {
    grid-area: 3 / 1 / 4 / 4;
}

.pokemon-name {
    height: auto;
}

.c-pokedex__item {
    box-shadow: var(--global-box-shadow);
    border-radius: var(--global-borderRadius);
    background-color: #fff;
}

@media screen and (min-width: 62em) {
    .c-pokedex {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(4, 1fr);
        grid-column-gap: 30px;
        grid-row-gap: 30px;
    }
    .grid_photo {
        grid-area: 1 / 1 / 3 / 3;
    }
    .grid_type {
        grid-area: 3 / 1 / 4 / 3;
    }
    .grid_stats {
        grid-area: 1 / 3 / 3 / 6;
    }
    .grid_profile {
        grid-area: 3 / 3 / 4 / 6;
    }
    .c-pokedex__item {
        grid-column: 1 / -1;
    }
}

/*
    Component: launchgrid
    ---
    Grid of the launchPage
*/

.c-launchgrid {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, 500px);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
}

.grid-mockup {
    grid-area: 1 / 1 / 2 / 2;
}

.grid-form {
    grid-area: 2 / 1 / 3 / 2;
}

@media (min-width: 62em) {
    .c-launchgrid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: 1fr;
        grid-column-gap: 0px;
        grid-row-gap: 0px;
    }
    .grid-mockup {
        grid-area: 1 / 1 / 2 / 2;
        height: 50%;
    }
    .grid-form {
        grid-area: 1 / 2 / 2 / 3;
        height: 50%;
    }
}

/*
    Component: Card
    ---
    Card with box shadow
*/

.c-card {
    margin-top: var(--global-whitespace-md);
    margin-bottom: var(--global-whitespace);
    border-radius: var(--global-borderRadius);
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05), 0 2px 4px rgba(0, 0, 0, .075);
    overflow: hidden;
    width: 100%;
    height: 100%;
}

.c-card__launch {
    margin-top: 40%;
    background-color: White;
}

.c-card__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    /* margin-bottom: var(--global-whitespace-md); */
}

.c-card__header, .c-card__body {
    padding: var(--global-whitespace-md);
}

.c-card__header {
    padding-bottom: 0;
}

.c-card__header>*:last-child, .c-card__body>*:last-child {
    margin-bottom: 0;
}

.c-card__body, .c-card__footer {
    padding: var(--global-whitespace);
}

.c-card__footer {
    text-align: center;
    border-top: var(--global-borderWidth) solid var(--card__footer-borderColor, var(--global-color-neutral-xxx-light));
}

.c-card__title {
    text-align: center;
    font-size: 18px;
    line-height: calc(var(--global-baseline) * 3);
    font-weight: 600;
}

/* This allows c-card__body and __footer to have equal padding everywhere */

.c-card__body>*:last-child, .c-card__footer>*:last-child, .c-card__body>*:last-child>*:last-child, .c-card__footer>*:last-child>*:last-child {
    margin-bottom: 0;
}

/*
    Component: Forms
    ---
    Everything form related here
*/

.c-form-field {
    position: relative;
}

.c-form-field--option {
    display: flex;
    align-items: center;
}

/*
    Component: Input
    ---
    Class to put on all input="text" like form inputs
*/

.c-input {
    --input-transition: all var(--global-transitionDuration-alpha) var(--global-transitionEasing-out);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 100%;
    border-radius: var(--input-borderRadius, var(--global-borderRadius));
    border: var(--input-borderWidth, var(--global-borderWidth)) solid var(--input-borderColor, var(--global-input-borderColor));
    background-color: var(--input-backgroundColor, var(--global-input-backgroundColor));
    color: var(--global-input-color);
    font-family: inherit;
    font-size: 16px;
    line-height: calc(var(--global-baseline) * 3);
    padding: calc(var(--global-baseline) * 1.5 - var(--global-borderWidth)) var(--global-whitespace-md);
    outline: none;
    transition: var(--input-transition);
}

.c-input:hover {
    border-color: var(--input-hover-borderColor, var(--global-input-hover-borderColor));
}

.c-input:focus, .c-input:active {
    border-color: var(--input-focus-borderColor, var(--global-input-focus-borderColor));
    box-shadow: var(--global-input-focus-boxShadowSpread) var(--input-focus-boxShadowColor, var(--global-input-focus-boxShadowColor));
}

.c-input--password-with-toggle {
    padding-right: 52px;
}

.c-option {
    margin-right: var(--global-whitespace-sm);
}

/*
    Component: Label
    ---
    Class to put on all form labels
*/

.c-label {
    margin-bottom: 0;
    font-size: 14px;
    padding-bottom: var(--global-whitespace-sm);
    line-height: calc(var(--global-baseline) * 2);
    color: var(--label-color, var(--global-label-color));
    width: 100%;
}

.c-label--option {
    padding-bottom: 0;
}

.c-label__error-message {
    font-weight: 600;
    float: right;
    display: none;
}

.c-label__error-message.is-visible {
    display: block;
}

.c-label--floating {
    position: absolute;
    top: calc(var(--global-baseline) * 1.5);
    left: var(--global-whitespace-sm);
    padding: var(--global-whitespace-xs) var(--global-whitespace-sm);
    background-color: var(--label--floating-backgroundColor, var(--global-input-backgroundColor));
    transition: transform var(--global-transitionDuration-alpha) var(--global-transitionEasing-out);
    z-index: 1;
    border-radius: var(--global-borderRadius);
}

.is-floating, .c-form-field:focus-within .c-label--floating {
    transform: translateY(calc(var(--global-baseline) * -3))
}

/*
    Component: Button
    ---
    Class to put on form buttons or
*/

.c-button {
    font-size: 16px;
    font-weight: 600;
    border-radius: var(--button-borderRadius, var(--global-borderRadius));
    border: var(--button-borderWidth, var(--global-borderWidth)) solid var(--button-borderColor, var(--global-color-alpha-dark));
    background-color: var(--button-backgroundColor, var(--global-color-alpha));
    color: #fff;
    padding: calc(var(--global-baseline) * 1.5 - var(--button-borderWidth, var(--global-borderWidth))) var(--global-whitespace-md);
    line-height: calc(var(--global-baseline) * 3);
    width: 100%;
    outline: none;
    box-shadow: var(--button-boxShadow, 0);
    transition: all var(--global-transitionDuration-alpha) var(--global-transitionEasing-out);
}

.c-button:hover {
    border-color: var(--button-hover-borderColor, var(--global-color-alpha-dark));
    background-color: var(--button-hover-backgroundColor, var(--global-color-alpha-light));
}

.c-button:focus {
    background-color: var(--button-focus-backgroundColor, var(--global-color-alpha));
    border-color: var(--button-focus-borderColor, var(--global-color-alpha-dark));
    box-shadow: var(--global-input-focus-boxShadowSpread) var(--button-focus-boxShadowColor, var(--global-input-focus-boxShadowColor));
}

.c-button:active {
    background-color: var(--button-active-backgroundColor, var(--global-color-alpha-dark));
    border-color: var(--button-active-borderColor, var(--global-color-alpha-dark));
    box-shadow: var(--button-active-boxShadow, 0);
}

@media (prefers-color-scheme: dark) {
    .c-button {
        --button-borderColor: var(--global-color-alpha);
        --button-hover-borderColor: var(--global-color-alpha-light);
        --button-active-borderColor: var(--global-color-alpha-dark);
        --button-focus-borderColor: var(--global-color-alpha-x-dark);
    }
}

/*
    Custom option
    ---
    Custom checkboxes
*/

/* Hide the actual input with the class .o-hide-accessible */

.c-custom-option {
    --custom-option-background: var(--global-input-backgroundColor);
    --custom-option-borderRadius: var(--global-borderRadius);
    --custom-option-borderColor: var(--global-input-borderColor);
    --custom-option-hover-borderColor: var(--global-input-hover-borderColor);
    --custom-option-focus-borderColor: var(--global-input-focus-borderColor);
    --custom-option-focus-boxShadowColor: var(--global-input-focus-boxShadowColor);
    --custom-option-focus-boxShadow: var(--global-input-focus-boxShadowSpread) var(--custom-option-focus-boxShadowColor);
    --custom-option__symbol-fill: var(--global-color-alpha);
    --custom-option-transition: var(--global-transitionDuration-alpha) var(--global-transitionEasing-out);
    display: flex;
    align-items: center;
}

.c-custom-option__fake-input {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 16px;
    height: 16px;
    margin-right: 8px;
    background: var(--custom-option-background);
    border: 1px solid var(--custom-option-borderColor);
    transition: all var(--custom-option-transition);
    box-shadow: var(--custom-option-boxShadow, 0);
}

.c-custom-option__fake-input--checkbox {
    border-radius: var(--custom-option-borderRadius);
}

.c-custom-option__symbol {
    display: block;
    opacity: 0;
    /* Hide the symbol initially */
    transform: scale(.5);
    transition: transform var(--custom-option-transition), opacity var(--custom-option-transition);
}

.c-custom-option__fake-input--checkbox .c-custom-option__symbol {
    width: 10px;
    height: 10px;
    fill: var(--custom-option__symbol-fill);
}

/* hover state */

.c-custom-option:hover {
    --custom-option-borderColor: var(--custom-option-hover-borderColor);
}

/* focused and active state */

.c-option--hidden:focus+.c-custom-option, .c-option--hidden:active+.c-custom-option {
    --custom-option-borderColor: var(--custom-option-focus-borderColor);
    --custom-option-boxShadow: var(--custom-option-focus-boxShadow);
}

/* checked state */

.c-option--hidden:checked+.c-custom-option .c-custom-option__symbol {
    opacity: 1;
    /* Show the symbol when the invisible checkbox button is checked */
    transform: scale(1);
}

/* focused and active state */

.c-option--hidden:focus+.c-custom-toggle, .c-option--hidden:active+.c-custom-toggle {
    --toggle-borderColor: var(--toggle-focus-borderColor);
    --toggle-boxShadow: var(--toggle-focus-boxShadow);
}

/* checked state */

.c-option--hidden:checked+.c-custom-toggle {
    --toggle-backgroundColor: var(--toggle-checked-backgroundColor);
    --toggle-borderColor: var(--toggle-checked-borderColor);
    --toggle__switch-backgroundColor: var(--toggle__switch-checked-backgroundColor);
}

.c-option--hidden:checked+.c-custom-toggle .c-custom-toggle__fake-input::after {
    transform: translate(24px, 0);
}

/* special active state */

.c-option--hidden:active+.c-custom-toggle .c-custom-toggle__fake-input::after {
    width: 28px;
}

.c-option--hidden:active:checked+.c-custom-toggle .c-custom-toggle__fake-input::after {
    margin-left: -6px;
}

/*
    Component: App
    ---
    Global app component
*/

.c-app {
    --c-app__topbar-height: calc(var(--global-baseline) * 10);
    min-height: 100vh;
}

.c-app__logo {
    background-color: var(--global-color-neutral-xxx-light);
    padding: 0 var(--global-whitespace-lg);
    height: var(--c-app__topbar-height);
    display: flex;
    align-items: center;
}

.c-app__topbar {
    background-color: #fff;
    /* background-color: rgba(255,255,255,.6);
    backdrop-filter: blur(5px); */
    box-shadow: var(--global-box-shadow);
    z-index: 20;
    display: none;
}

.c-app__sidebar {
    background-color: var(--global-color-neutral-light);
    display: none;
}

.c-app__main {
    background-color: var(--global-color-neutral-xxxx-light);
}

@media (min-width: 62em) {
    .c-app__topbar, .c-app__sidebar {
        display: block;
    }
    .c-app {
        display: grid;
        grid-template-columns: 17rem 1fr;
        grid-template-rows: var(--c-app__topbar-height) 1fr;
    }
    .c-app__sidebar, .c-app__main {
        height: calc(100vh - var(--c-app__topbar-height));
        overflow-y: auto;
        overflow-x: hidden;
    }
}

/*
    Component: topbar
*/

.c-topbar {
    padding: 0 var(--global-whitespace-lg);
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
}

/*
    Component: search
*/

.c-search {
    display: flex;
    align-items: center;
    flex-direction: row-reverse;
    width: 100%;
}

.c-search__input {
    all: unset;
    width: 100%;
    line-height: calc(var(--global-baseline) * 6);
}

.c-search__button {
    display: block;
    background-color: transparent;
    margin-right: var(--global-whitespace-sm);
    /* border: none; */
}

.c-search__icon {
    display: block;
    /* width: 16px;
    height: 16px; */
    width: 1rem;
    height: 1rem;
    fill: var(--global-color-neutral-x-light);
}

/*------------------------------------*\
#States
\*------------------------------------*/

.has-error {
    --label-color: var(--global-color-error);
    --input-borderColor: var(--global-input-error-borderColor);
    --input-hover-borderColor: var(--global-input-error-borderColor);
    --input-focus-borderColor: var(--global-input-error-borderColor);
    --input-focus-boxShadowColor: var(--global-input-error-boxShadowColor);
}

/*------------------------------------*\
#UTILITIES
\*------------------------------------*/

/*
    Utilities: color
    ---
    Utility classes to put specific colors onto elements
*/

.u-color-neutral {
    color: var(--global-color-neutral);
}

.u-color-neutral-dark {
    color: var(--global-color-neutral-dark);
}

/*
    Utilities: spacing
    ---
    Utility classes to put specific margins and paddings onto elements
*/

.u-pt-clear {
    padding-top: 0 !important;
}

.u-mb-clear {
    margin-bottom: 0 !important;
}

.u-mb-xxs {
    margin-bottom: var(--global-whitespace-xxs) !important;
}

.u-mb-xs {
    margin-bottom: var(--global-whitespace-xs) !important;
}

.u-mb-sm {
    margin-bottom: var(--global-whitespace-sm) !important;
}

.u-mb-md {
    margin-bottom: var(--global-whitespace-md) !important;
}

.u-mb-lg {
    margin-bottom: var(--global-whitespace-lg) !important;
}

.u-mb-xl {
    margin-bottom: var(--global-whitespace-xl) !important;
}

/*
    Utilities: max-width
    ---
    Utility classes to put specific max widths onto elements
*/

.u-max-width-xs {
    max-width: 27em !important;
}

.u-max-width-sm {
    max-width: 39em !important;
}

.u-max-width-md {
    max-width: 50em !important;
}

.u-max-width-lg {
    max-width: 63.5em !important;
}

.u-max-width-none {
    max-width: none !important;
}

/*
    Utilities: align
    ---
    Utility classes align text or components
*/

.u-align-text-center {
    text-align: center;
}

.u-align-center {
    margin: 0 auto;
}

/*
    Utilities: text
    Utility classes to create smaller or bigger test
*/

.u-text-xs {
    font-size: calc(11rem / var(--global-root-font-size));
}

.u-text-sm {
    font-size: calc(13rem / var(--global-root-font-size));
    line-height: calc(var(--global-baseline) * 4);
}

/*
    Utilities: span
    Utility classes to span grid items across the x and y axis
*/

/* x: horizontal */

@media (min-width: 62em) {
    .u-x-span-3-bp3 {
        grid-column: span 3;
    }
    .u-x-span-4-bp3 {
        grid-column: span 4;
    }
    .u-x-span-6-bp3 {
        grid-column: span 6;
    }
    .u-x-span-8-bp3 {
        grid-column: span 8;
    }
    .u-x-span-9-bp3 {
        grid-column: span 9;
    }
}

/* y: vertical */

@media (min-width: 62em) {
    .u-y-span-2-bp3 {
        grid-row: span 2;
    }
}

/*------------------------------------*\
#MEDIA
\*------------------------------------*/

/*
    Media Queries
    ---
    EXAMPLE Media Queries for Responsive Design.
    These examples override the primary ('mobile first') styles.
    USE THEM INLINE!
*/

/* Extra small devices (portrait phones, less than 576px)
No media query since this is the default in mobile first design
*/

/* Small devices (landscape phones, 576px and up)
@media (min-width: 576px) {}
*/

/* Medium devices (tablets, 768px and up)
@media (min-width: 768px) {}
*/

/* Large devices (landscape tablets, desktops, 62em and up)
@media (min-width: 62em) {}
*/

/* Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {}
*/

/*
    Print styles.
    ---
    Inlined to avoid the additional HTTP request:
    http://www.phpied.com/delay-loading-your-print-css/
*/

@media print {
    *, *:before, *:after {
        background: transparent !important;
        color: #000 !important;
        /* Black prints faster:
        http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }
    a, a:visited {
        text-decoration: underline;
    }
    a[href]:after {
        content: " (" attr(href) ")";
    }
    abbr[title]:after {
        content: " (" attr(title) ")";
    }
    /*
    * Don't show links that are fragment identifiers,
    * or use the `javascript:` pseudo protocol
    */
    a[href^="#"]:after, a[href^="javascript:"]:after {
        content: "";
    }
    pre {
        white-space: pre-wrap !important;
    }
    pre, blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }
    /*
    * Printing Tables:
    * http://css-discuss.incutio.com/wiki/Printing_Tables
    */
    thead {
        display: table-header-group;
    }
    tr, img {
        page-break-inside: avoid;
    }
    p, h2, h3 {
        orphans: 3;
        widows: 3;
    }
    h2, h3 {
        page-break-after: avoid;
    }
}